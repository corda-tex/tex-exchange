buildscript {
    ext {
        kotlin_group = "org.jetbrains.kotlin"
        kotlin_version = "1.2.71"

        corda_group = "net.corda"
        corda_release_version = "4.0"

        corda_gradle_plugin_group = "net.corda.plugins"
        corda_gradle_plugin_version = "4.0.45"

        junit_group = "org.junit.jupiter"
        junit_version = "5.3.1"

        log4j_group = "org.apache.logging.log4j"
        log4j_version = "2.11.2"

        logback_group = "ch.qos.logback"
        logback_version = "1.2.3"

        jackson_group = "com.fasterxml.jackson.datatype"
        jackson_version = "2.9.8"

        ktor_group = "io.ktor"
        ktor_version = "1.2.2"
        ktor_kotlin_version = "1.3.40"

        cordapp_platform_version = 4
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "$kotlin_group:kotlin-gradle-plugin:$ktor_kotlin_version"
        classpath "$corda_gradle_plugin_group:cordapp:$corda_gradle_plugin_version"
        classpath "$corda_gradle_plugin_group:cordformation:$corda_gradle_plugin_version"
        classpath "$corda_gradle_plugin_group:quasar-utils:$corda_gradle_plugin_version"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

dependencies {
    // Kotlin Dependencies
    implementation "$kotlin_group:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda Development Dependencies
    cordaCompile "$corda_group:corda-core:$corda_release_version"

    // CorDapp Dependencies
    // TODO : Add cordapp packages to your dependency configuration; for example...
    // cordapp project(":my-first-cordapp-contract")
    // cordapp project(":my-first-cordapp-workflow")

    // Corda Deployment Dependencies
    cordaCompile "$corda_group:corda:$corda_release_version"
    cordaCompile "$corda_group:corda-node:$corda_release_version"
    cordaRuntime "$log4j_group:log4j-slf4j-impl:$log4j_version"

    // Test Dependencies
    testImplementation project(":cordacademy-test")
}

jar { exclude '**/log4j2*.xml' }

test { useJUnitPlatform() }

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true
    }
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {

    nodeDefaults {
        projectCordapp {
            deploy = false
        }
        // TODO : Add cordapp packages to your node deployment configuration; for example...
        // cordapp project(":my-first-cordapp-contract")
        // cordapp project(":my-first-cordapp-workflow")
        rpcUsers = [[user: "guest", "password": "letmein", "permissions": ["ALL"]]]
    }

    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
        cordapps.clear()
    }

    node {
        name "O=PartyA,L=London,C=GB"
        p2pPort 10004
        rpcSettings {
            address("localhost:10005")
            adminAddress("localhost:10045")
        }
    }

    node {
        name "O=PartyB,L=New York,C=US"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10049")
        }
    }

    node {
        name "O=PartyC,L=Paris,C=FR"
        p2pPort 10012
        rpcSettings {
            address("localhost:10013")
            adminAddress("localhost:10053")
        }
    }
}